function Login() {
  const [password, setPassword] = useState("");
  const [email, setEmail] = useState("");
  const [isError, setIsError] = useState(false); //true = error, false = no error.
  const error = "Email or Password not matched";
  const [passwordError, setPasswordError] = useState("");
  const [emailError, setEmailError] = useState("");
  const navigate = useNavigate();
  const [showAlert, setShowAlert] = useState(true);

  const loginSubmit = (e) => {
    e.preventDefault();
    // handleValidation();
    logMe();
  };

  const logMe = () => {
    var myHeaders = new Headers();
    myHeaders.append("Content-Type", "application/json");
    var raw = JSON.stringify({
      email: email,
      password: password,
    });

    var requestOptions = {
      method: "POST",
      headers: myHeaders,
      body: raw,
      redirect: "follow",
    };

    fetch("http://localhost:5000/login", requestOptions)
      .then((response) => response.text())
      .then((result) => {
        // isConnected(result)
        localStorage.setItem("isLoggedIn", result);
        if (result === "true") {
          toast.success("Connected", {
            position: "top-right",
            autoClose: 2000,
            hideProgressBar: false,
            closeOnClick: true,
            pauseOnHover: true,
            draggable: true,
            progress: undefined,
            theme: "light",
          });
          setTimeout(() => (window.location = "/dashboard"), 2000);
        } else {
          setIsError(true);
          setTimeout(() => setIsError(false), 5000);
          navigate("/dashboard");
        }
      })
      .catch((error) => console.log("error", error));
  };

  return (
    <div className="App">
      <div className="container">
        <div className="row d-flex justify-content-center">
          <div className="col-md-4">
            <form id="loginform" onSubmit={loginSubmit}>
              <div className="form-group">
                <label>Email address</label>
                <input
                  type="email"
                  className="form-control"
                  id="EmailInput"
                  name="EmailInput"
                  aria-describedby="emailHelp"
                  placeholder="Enter email"
                  onChange={(event) => setEmail(event.target.value)}
                />
                <small id="emailHelp" className="text-danger form-text">
                  {emailError}
                </small>
              </div>
              <div className="form-group">
                <label>Password</label>
                <input
                  type="password"
                  className="form-control"
                  id="exampleInputPassword1"
                  placeholder="Password"
                  onChange={(event) => setPassword(event.target.value)}
                />
                <small id="passworderror" className="text-danger form-text">
                  {passwordError}
                </small>
              </div>

              {showAlert && (
                <Alert variant="danger" onClose={() => setShowAlert(false)}>
                  <Alert.Heading>{error}</Alert.Heading>
                </Alert>
              )}
              <button type="submit" className="btn btn-primary">
                Submit
              </button>              
                <ToastContainer
                position="top-right"
                autoClose={5000}
                hideProgressBar={false}
                newestOnTop={false}
                closeOnClick
                rtl={false}
                pauseOnFocusLoss
                draggable
                pauseOnHover
                theme="light"
                /> 
              </form>
            </div>
            {/* Source: <a href="https://askavy.com/react-form/">React Form</a> */}
          </div>
          </div>
          </div>
);
}



// homepgae export

function Homepage() {
  return(
      <div>
          <Navbardemo/>
      </div>
  )
  
}

#logo {
  position: fixed;
  top: 0px;
  left: 0;
  bottom: 0;
  width: 200px; /* set the width of the Navbar */
}

#codebloggs {
  position: fixed;
  top: 0px;
  left: 600px;
  bottom: 0;
  width: 200px; /* set the width of the Navbar */
}

#post {
  position: fixed;
  top: 0px;
  left: 900px;
  bottom: 0;
  width: 200px; /* set the width of the Navbar */
}

.imagep {
  height: 0%;
  width : 50%;
}
#dropdown {
  position: fixed;
  top: 0px;
  left: 1200px;
  bottom: 0;
  width: 200px; /* set the width of the Navbar */
}

// with aspect ratio
.header-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 100px; /* set the height of the header */
  padding: 0 20px; /* add some padding to the sides */
}

.header-item {
  width: 25%; /* divide the width equally among the items */
}

#logo img {
  height: 100%; /* set the height to match the header */
  width: auto; /* keep the aspect ratio */
}

#dropdown .dropdown-content {
  position: absolute;
  z-index: 1;
  right: 0;
}

//         <header>
//   <div class="header-wrapper">
//     <div id="logo" class="header-item">
//       <img class="imagep" src={profile} alt="Logo" />
//     </div>
//     <div id="codebloggs" class="header-item">
//       <h1>CodeBloggs</h1>
//     </div>
//     <div id="post" class="header-item">
//       <button onClick={handlePostClick}>Post</button>
//     </div>
//     <div id="dropdown" class="header-item">
//       <button class="dropbtn" onClick={handleUserNameClick}>
//         {userName} &#9660;
//       </button>
//       {menuOpen && (
//         <div class="dropdown-content">
//           <a href="#" onClick={handleAccountSettingsClick}>Account Settings</a>
//           <a href="#" onClick={handleLogoutClick}>Logout</a>
//         </div>
//       )}
//     </div>
//   </div>
// </header>

<!-- navbar test -->
<!-- //     <div>
  //       <nav className="navbar navbar-expand-lg navbar-light bg-light">
  //         <NavLink className="navbar-brand" to="/">
  //         <img style={{"width" : 25 + '%'}} src={process.env.PUBLIC_URL + '../CodeBloggs logo2.png'}></img>
  //         </NavLink>
  //         <button
  //           className="navbar-toggler"
  //           type="button"
  //           data-toggle="collapse"
  //           data-target="#navbarSupportedContent"
  //           aria-controls="navbarSupportedContent"
  //           aria-expanded="false"
  //           aria-label="Toggle navigation"
  //         >
  //           <span className="navbar-toggler-icon"></span>
  //         </button>
  
  //         <div className="collapse navbar-collapse" id="navbarSupportedContent">
  //           <ul className="navbar-nav ml-auto">
  //             <li className="nav-item">
  //               <NavLink className="nav-link" to="/create">
  //                 Create Record
  //               </NavLink>
  //             </li>
  //           </ul>
  //         </div>
  //       </nav>
  //     </div> -->