function Login() {
  const [password, setPassword] = useState("");
  const [email, setEmail] = useState("");
  const [isError, setIsError] = useState(false); //true = error, false = no error.
  const error = "Email or Password not matched";
  const [passwordError, setPasswordError] = useState("");
  const [emailError, setEmailError] = useState("");
  const navigate = useNavigate();
  const [showAlert, setShowAlert] = useState(true);

  const loginSubmit = (e) => {
    e.preventDefault();
    // handleValidation();
    logMe();
  };

  const logMe = () => {
    var myHeaders = new Headers();
    myHeaders.append("Content-Type", "application/json");
    var raw = JSON.stringify({
      email: email,
      password: password,
    });

    var requestOptions = {
      method: "POST",
      headers: myHeaders,
      body: raw,
      redirect: "follow",
    };

    fetch("http://localhost:5000/login", requestOptions)
      .then((response) => response.text())
      .then((result) => {
        // isConnected(result)
        localStorage.setItem("isLoggedIn", result);
        if (result === "true") {
          toast.success("Connected", {
            position: "top-right",
            autoClose: 2000,
            hideProgressBar: false,
            closeOnClick: true,
            pauseOnHover: true,
            draggable: true,
            progress: undefined,
            theme: "light",
          });
          setTimeout(() => (window.location = "/dashboard"), 2000);
        } else {
          setIsError(true);
          setTimeout(() => setIsError(false), 5000);
          navigate("/dashboard");
        }
      })
      .catch((error) => console.log("error", error));
  };

  return (
    <div className="App">
      <div className="container">
        <div className="row d-flex justify-content-center">
          <div className="col-md-4">
            <form id="loginform" onSubmit={loginSubmit}>
              <div className="form-group">
                <label>Email address</label>
                <input
                  type="email"
                  className="form-control"
                  id="EmailInput"
                  name="EmailInput"
                  aria-describedby="emailHelp"
                  placeholder="Enter email"
                  onChange={(event) => setEmail(event.target.value)}
                />
                <small id="emailHelp" className="text-danger form-text">
                  {emailError}
                </small>
              </div>
              <div className="form-group">
                <label>Password</label>
                <input
                  type="password"
                  className="form-control"
                  id="exampleInputPassword1"
                  placeholder="Password"
                  onChange={(event) => setPassword(event.target.value)}
                />
                <small id="passworderror" className="text-danger form-text">
                  {passwordError}
                </small>
              </div>

              {showAlert && (
                <Alert variant="danger" onClose={() => setShowAlert(false)}>
                  <Alert.Heading>{error}</Alert.Heading>
                </Alert>
              )}
              <button type="submit" className="btn btn-primary">
                Submit
              </button>              
                <ToastContainer
                position="top-right"
                autoClose={5000}
                hideProgressBar={false}
                newestOnTop={false}
                closeOnClick
                rtl={false}
                pauseOnFocusLoss
                draggable
                pauseOnHover
                theme="light"
                /> 
              </form>
            </div>
            {/* Source: <a href="https://askavy.com/react-form/">React Form</a> */}
          </div>
          </div>
          </div>
);
}



// homepgae export

function Homepage() {
  return(
      <div>
          <Navbardemo/>
      </div>
  )
  
}

#logo {
  position: fixed;
  top: 0px;
  left: 0;
  bottom: 0;
  width: 200px; /* set the width of the Navbar */
}

#codebloggs {
  position: fixed;
  top: 0px;
  left: 600px;
  bottom: 0;
  width: 200px; /* set the width of the Navbar */
}

#post {
  position: fixed;
  top: 0px;
  left: 900px;
  bottom: 0;
  width: 200px; /* set the width of the Navbar */
}

.imagep {
  height: 0%;
  width : 50%;
}
#dropdown {
  position: fixed;
  top: 0px;
  left: 1200px;
  bottom: 0;
  width: 200px; /* set the width of the Navbar */
}

// with aspect ratio
.header-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 100px; /* set the height of the header */
  padding: 0 20px; /* add some padding to the sides */
}

.header-item {
  width: 25%; /* divide the width equally among the items */
}

#logo img {
  height: 100%; /* set the height to match the header */
  width: auto; /* keep the aspect ratio */
}

#dropdown .dropdown-content {
  position: absolute;
  z-index: 1;
  right: 0;
}

//         <header>
//   <div class="header-wrapper">
//     <div id="logo" class="header-item">
//       <img class="imagep" src={profile} alt="Logo" />
//     </div>
//     <div id="codebloggs" class="header-item">
//       <h1>CodeBloggs</h1>
//     </div>
//     <div id="post" class="header-item">
//       <button onClick={handlePostClick}>Post</button>
//     </div>
//     <div id="dropdown" class="header-item">
//       <button class="dropbtn" onClick={handleUserNameClick}>
//         {userName} &#9660;
//       </button>
//       {menuOpen && (
//         <div class="dropdown-content">
//           <a href="#" onClick={handleAccountSettingsClick}>Account Settings</a>
//           <a href="#" onClick={handleLogoutClick}>Logout</a>
//         </div>
//       )}
//     </div>
//   </div>
// </header>

<!-- navbar test -->
<!-- //     <div>
  //       <nav className="navbar navbar-expand-lg navbar-light bg-light">
  //         <NavLink className="navbar-brand" to="/">
  //         <img style={{"width" : 25 + '%'}} src={process.env.PUBLIC_URL + '../CodeBloggs logo2.png'}></img>
  //         </NavLink>
  //         <button
  //           className="navbar-toggler"
  //           type="button"
  //           data-toggle="collapse"
  //           data-target="#navbarSupportedContent"
  //           aria-controls="navbarSupportedContent"
  //           aria-expanded="false"
  //           aria-label="Toggle navigation"
  //         >
  //           <span className="navbar-toggler-icon"></span>
  //         </button>
  
  //         <div className="collapse navbar-collapse" id="navbarSupportedContent">
  //           <ul className="navbar-nav ml-auto">
  //             <li className="nav-item">
  //               <NavLink className="nav-link" to="/create">
  //                 Create Record
  //               </NavLink>
  //             </li>
  //           </ul>
  //         </div>
  //       </nav>
  //     </div> -->

  // show post modal

  export default function Header() {
    const [showModal, setShowModal] = useState(false);
    const [postTitle, setPostTitle] = useState('');
    const [postText, setPostText] = useState('');
  
    const handlePostSubmit = () => {
      // Implement post submission logic here
      console.log(`Title: ${postTitle}`);
      console.log(`Text: ${postText}`);
      setShowModal(false);
    };
  
    return (
      <>
        <Navbar bg="light" expand="lg" style={{ borderBottom: '2px solid #8d88ea' }}>
          <Navbar.Brand href="#home">
            <img
              src={logo}
              width="30"
              height="30"
              className="d-inline-block align-top"
              alt="Logo"
            />
            Codebloggs
          </Navbar.Brand>
          <Navbar.Toggle aria-controls="basic-navbar-nav" />
          <Navbar.Collapse id="basic-navbar-nav">
            <Nav className="mr-auto"></Nav>
            <Nav>
              <Button variant="outline-primary" className="mr-2" onClick={() => setShowModal(true)}>
                Post
              </Button>
              <Dropdown>
                <Dropdown.Toggle variant="outline-primary" id="user-dropdown">
                  User
                </Dropdown.Toggle>
                <Dropdown.Menu>
                  <Dropdown.Item href="#account-settings">Account Settings</Dropdown.Item>
                  <Dropdown.Item href="#logout">Log Out</Dropdown.Item>
                </Dropdown.Menu>
              </Dropdown>
            </Nav>
          </Navbar.Collapse>
        </Navbar>
        <Modal show={showModal} onHide={() => setShowModal(false)}>
          <Modal.Header closeButton>
            <Modal.Title>Post a new article</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            <Form>
              <Form.Group controlId="postTitle">
                <Form.Label>Title</Form.Label>
                <Form.Control type="text" placeholder="Enter title" value={postTitle} onChange={(e) => setPostTitle(e.target.value)} />
              </Form.Group>
              <Form.Group controlId="postText">
                <Form.Label>Text</Form.Label>
                <Form.Control as="textarea" rows={3} placeholder="Enter text" value={postText} onChange={(e) => setPostText(e.target.value)} />
              </Form.Group>
            </Form>
          </Modal.Body>
          <Modal.Footer>
            <Button variant="secondary" onClick={() => setShowModal(false)}>
              Close
            </Button>
            <Button variant="primary" onClick={handlePostSubmit}>
              Post
            </Button>
          </Modal.Footer>
        </Modal>
      </>
    );
  }




  test log
  import React, { useState } from 'react';
import Modal from 'react-bootstrap/Modal';
import { Navbar, Nav, Dropdown, Button, Form } from 'react-bootstrap';
import 'bootstrap/dist/css/bootstrap.min.css';
import logo from '../../assets/images/CodeBloggsgraphic.png';
import { useHistory } from 'react-router-dom';


export default function Header() {
  const history = useHistory();

  const handleLogout = () => {
    // clear user session or token here
    history.push('/');
  };
  const [showModal, setShowModal] = useState(false);
  const [postTitle, setPostTitle] = useState('');
  const [postText, setPostText] = useState('');

  const handlePostSubmit = () => {
    // Implement post submission logic here
    console.log(`Title: ${postTitle}`);
    console.log(`Text: ${postText}`);
    setShowModal(false);
  };

  return (
    <>
      <Navbar bg="light" expand="lg" style={{ borderBottom: '2px solid #8d88ea' }} fixed="top">
        <Navbar.Brand href="#home" className="mx-auto">
          <img
            src={logo}
            width="30"
            height="30"
            className="d-inline-block align-top"
            alt="Logo"
          />
          Codebloggs
        </Navbar.Brand>
        <Navbar.Toggle aria-controls="basic-navbar-nav" />
        <Navbar.Collapse id="basic-navbar-nav">
          <Nav className="mr-auto"></Nav>
          <Nav className="mx-auto">
            <Button style={{backgroundColor: "#8d88ea" }}variant="outline-light" className="mr-2" onClick={() => setShowModal(true)}>
              Post
            </Button>
            <Dropdown>
              <Dropdown.Toggle style={{backgroundColor: "#8d88ea" }} variant="outline-light" id="user-dropdown">
                User
              </Dropdown.Toggle>
              <Dropdown.Menu>
                <Dropdown.Item href="#account-settings">Account Settings</Dropdown.Item>
                <Dropdown.Item onClick={handleLogout}>Log Out</Dropdown.Item>
              </Dropdown.Menu>
            </Dropdown>
          </Nav>
          <Nav className="ml-auto"></Nav>
        </Navbar.Collapse>
      </Navbar>
      <Modal show={showModal} onHide={() => setShowModal(false)}>
        <Modal.Header closeButton>
          <Modal.Title>Post a new article</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          <Form>
            <Form.Group controlId="postTitle">
              <Form.Label>Title</Form.Label>
              <Form.Control type="text" placeholder="Enter title" value={postTitle} onChange={(e) => setPostTitle(e.target.value)} />
            </Form.Group>
            <Form.Group controlId="postText">
              <Form.Label>Text</Form.Label>
              <Form.Control as="textarea" rows={3} placeholder="Enter text" value={postText} onChange={(e) => setPostText(e.target.value)} />
            </Form.Group>
          </Form>
        </Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={() => setShowModal(false)}>
            Close
          </Button>
          <Button variant="primary" onClick={handlePostSubmit}>
            Post
          </Button>
        </Modal.Footer>
      </Modal>
    </>
  );
}


current login page 
import React from "react";

// We use Route in order to define the different routes of our application
import { Route, Routes } from "react-router-dom";

// We import all the components we need in our app
import Navbar from "./components/navigations/navbar";
import Login from "./components/pages/login";
import Registration from "./components/pages/registration";
import Headercomp from "./components/navigations/headercomp";
import Home from "./components/pages/home";
import Carousel from "./components/navigations/carousel";
import NetworkView from "./components/mainViews/networkViews"
import AdminView from "./components/mainViews/adminViews"
import BloggsView from "./components/mainViews/bloggsViews"
import Header from "./components/navigations/headercomp"

import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

const App = () => {
  return (
    <div>
      {/* <Headercomp/> */}
      <Header/>
      <div>
      <Navbar />
        <div style={{ margin: 20 }}>
        <Routes>
          <Route path="/" element={<Login />} />
          <Route path="/home" element={<Home />} />
          <Route path="/registration" element={<Registration />} />
          <Route path="/network" element={<NetworkView />} />
          <Route path="/admin" element={<AdminView />} />
          <Route path="/bloggs" element={<BloggsView />} />
        </Routes>
        </div>
      </div>
    </div>
  );
};

export default App;
  

import { useState } from "react";
import { useNavigate } from "react-router";
import useCookie from 'react-use-cookie';
import '../css/Style.css';
import '../css/login.css';
import profilePicture from "../../images/CodeBloggs graphic.png";
import emailIcon from "../../images/emailLgo.png";
import passwordIcon from "../../images/padlock_321783.png";

function Login(){
    const navigate = useNavigate();
    const [userToken, setUserToken] = useCookie('token', '0');
    const [userId, setUserId] = useCookie('user_id', '');
    const [form, setForm] = useState({
        email: "",
        password: "",
    });

    const handleSubmit = async (e) => {
        e.preventDefault();
        let loginData = await fetchLogin();
        if(loginData.type == "error"){
            navigate("/");
        }
        else{
            let sessionData = await fetchSession(loginData.data);
            setUserId(loginData.data._id)
            setUserToken(sessionData.data.session_id);
            navigate("/home");
        };
    };

    async function fetchLogin(id){
        let newLogin = { ...form };
        const settings = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(newLogin)
        };

        try {
            const fetchResponse = await fetch(`http://localhost:5000/user/login`, settings);
            const data = await fetchResponse.json();
            return data;
        } catch (e) {
            return e;
        }    
    }

    async function fetchSession(user){
        const settings = {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({user:user})
        };

        try {
            const fetchResponse = await fetch(`http://localhost:5000/session`, settings);
            const data = await fetchResponse.json();
            return data;
        } catch (e) {
            return e;
        }    
    }
    
     // These methods will update the state properties.
    function updateForm(value) {
        return setForm((prev) => {
        return { ...prev, ...value };
        });
    };

    return(
        <div className="main">
            <div className="sub-main visible"> 
                <form onSubmit={handleSubmit}>
                    <div className= "igsm">
                       <div className="container-images">
                       {/* <img src={process.env.PUBLIC_URL+ '/images/Codebloggs graphic.png'}/> */}
                            <img src={profilePicture} alt="profile" className="profile"/>
                       </div>
                     </div>
                     <div>
                        <h1>Login Page</h1>
                        <div>
                            <img src={emailIcon} alt="email" className="email"/>
                            <input 
                                type="text" 
                                placeholder="email" 
                                className="name"
                                name="Email"
                                value={form.email}
                                onChange={(e) => updateForm({ email: e.target.value })}
                            />
                        </div>
                        <div className="second input" style={{ marginTop: '10px' }}>
                            <img src={passwordIcon} alt="password" className="email"/>
                            <input 
                                type="password" 
                                placeholder="password" 
                                className="name"
                                name="Password"
                                value={form.password}
                                onChange={(e) => updateForm({ password: e.target.value })}
                        />
                        </div>
                        <div className="login-button">
                            <button type="submit">Login</button>
                        </div>
                        
                            <p className="link">
                                <a href="/registration">Sign Up</a>
                            </p>
                        
                     </div>
                </form>
            </div>
        </div>            
    );
}

export default Login;


skeleton loader 
// import ReactContentLoader from "react-content-loader";

// const UserLoader = () => {
//   return (
//     <div className="user-loader">
//       <ReactContentLoader 
//         speed={2}
//         width={600}
//         height={100}
//         viewBox="0 0 600 100"
//         backgroundColor="#f3f3f3"
//         foregroundColor="#ecebeb"
//       >
//         <rect x="10" y="10" rx="3" ry="3" width="100" height="80" />
//         <rect x="130" y="20" rx="3" ry="3" width="150" height="12" />
//         <rect x="130" y="40" rx="3" ry="3" width="200" height="12" />
//         <rect x="130" y="60" rx="3" ry="3" width="120" height="12" />
//       </ReactContentLoader>
//     </div>
//   );
// };
// return (
//   <div>
//     {isLoading ? (
//       <UserLoader />
//     ) : (
//       <div>
//         {/* your current code */}
//       </div>
//     )}
//   </div>
// );